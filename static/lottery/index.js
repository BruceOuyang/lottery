class GameBlock {
    constructor(x, y, vx, vy, bg, data) {
        this.color = ["#0052cc", "#cb22e5", "#8ee524", "#7de89d", "#fcd58d", "#db85d5", "#e2a878", "#239bba", "#e542f7"];
        this.x = x;
        this.y = y;
        this.vx = vx;
        this.vy = vy;
        this.bg = this.getRandomColor();
        this.data = data;
        this.id = data.id;
        this.g = (Math.random() * 5 + 0.1) / 100;
    }
    getRandomColor() {
        return this.color[Math.floor(Math.random() * this.color.length)];
    }
}
class GameScreen {
    constructor(canvas, userList, setting) {
        this.stopped = false;
        this.itemWidth = 40;
        this.itemHeight = 40;
        this.countOfItemInRunningAtAnyTime = 30;
        this.newCountPeerSecond = 15;
        this.runningStore = new Map();
        this.preparePool = [];
        this.fixedBlock = new Map();
        this.canvas = canvas;
        this.countOfItemInRunningAtAnyTime = setting.countOfItemInRunningAtAnyTime;
        this.newCountPeerSecond = setting.newCountPeerSecond;
        this.initUserPool(userList);
    }
    shuffle(list) {
        var m = list.length;
        var t, i;
        while (m) {
            i = Math.floor(Math.random() * m--);
            t = list[m];
            list[m] = list[i];
            list[i] = t;
        }
        return list;
    }
    initUserPool(userList) {
        userList = this.shuffle(userList);
        const initVy = Math.floor(Math.random() * 10);
        for (let i = 0; i < userList.length; i++) {
            let x = Math.floor((this.canvas.width - this.itemWidth) * Math.random());
            this.preparePool.push(new GameBlock(x, 0 - this.itemHeight, 0, initVy, "", userList[i]));
        }
    }
    pickInitRunItems() {
        if (this.countOfItemInRunningAtAnyTime < this.preparePool.length) {
            let i = 0;
            while (i < this.countOfItemInRunningAtAnyTime) {
                let item = this.preparePool.shift();
                this.runningStore.set(item.id, item);
                i++;
            }
        }
        else {
            this.preparePool.forEach((item) => {
                this.runningStore.set(item.id, item);
            });
            this.preparePool = [];
        }
    }
    start() {
        this.pickInitRunItems();
        this.addNewItemAtTime = Date.now();
        this.animal(Date.now());
    }
    stop(pickCountList) {
        this.stopped = true;
        let listOnScreen = [];
        for (let key of this.runningStore.keys()) {
            let item = this.runningStore.get(key);
            if (item.x > 0 && item.y > 0 && item.y < this.canvas.height) {
                listOnScreen.push(item);
            }
        }
        listOnScreen = this.shuffle(listOnScreen);
        const luckyUserList = [];
        let start = 0;
        for (let i = 0; i < pickCountList.length; i++) {
            let list = listOnScreen.slice(start, start + pickCountList[i]);
            let q = [];
            list.forEach((item) => {
                q.push(item.data);
            });
            luckyUserList.push(q);
            start = pickCountList[i];
        }
        return luckyUserList;
    }
    computeEveryItemPositionAndDrawIt(runTimeInterval) {
        const ctx = this.canvas.getContext("2d");
        const keys = this.runningStore.keys();
        for (let key of keys) {
            let item = this.runningStore.get(key);
            if (item.x > this.canvas.width || item.x < 0 - this.itemWidth || item.y > this.canvas.height) {
                this.runningStore.delete(key);
                item.x = Math.floor((this.canvas.width - this.itemWidth) * Math.random());
                item.y = 0 - this.itemHeight;
                item.vy = Math.floor(Math.random() * 3);
                this.preparePool.push(item);
                continue;
            }
            ctx.fillStyle = item.bg;
            ctx.beginPath();
            ctx.arc(item.x + this.itemWidth / 2, item.y + this.itemHeight / 2, this.itemWidth / 2, 0, 2 * Math.PI);
            ctx.closePath();
            ctx.fill();
            item.y += item.vy;
            item.x += item.vx;
            item.vy += item.g * runTimeInterval;
            this.runningStore.set(item.id, item);
        }
        if (Date.now() - this.addNewItemAtTime < 200 + Math.random() * 800) {
            return;
        }
        this.preparePool = this.shuffle(this.preparePool);
        this.addNewItemAtTime = Date.now();
        let needAddNewItem = this.newCountPeerSecond;
        if (needAddNewItem >= this.preparePool.length) {
            this.preparePool.forEach((item) => {
                this.runningStore.set(item.id, item);
            });
            this.preparePool = [];
            return;
        }
        while (needAddNewItem > 0) {
            let item = this.preparePool.shift();
            this.runningStore.set(item.id, item);
            needAddNewItem--;
        }
    }
    animal(lastTime) {
        const ctx = this.canvas.getContext("2d");
        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
        const now = Date.now();
        const runTimeInterval = now - lastTime;
        this.computeEveryItemPositionAndDrawIt(runTimeInterval);
        requestAnimationFrame(() => {
            if (this.stopped) {
                return;
            }
            this.animal(now);
        });
    }
}
async function prepareSetting(id) {
    return fetch("/api/setting/prepare/" + id).then((response) => {
        if (response.status == 200) {
            return response.json();
        }
        throw new Error(response.statusText);
    }).then((data) => {
        if (data.code == 0) {
            return data.data;
        }
        throw new Error(`code:${data.code}, msg:${data.msg}`);
    });
}
var game;
async function main() {
    const urlParams = new URLSearchParams(location.search.substring(1));
    const id = urlParams.get("id");
    if (!id) {
        alert("没有该抽奖规则!!");
        return;
    }
    let setting = await prepareSetting(id);
    console.log(setting);
    const screenDom = document.getElementById('screen');
    game = new GameScreen(screenDom, setting.userList, {
        countOfItemInRunningAtAnyTime: 30,
        newCountPeerSecond: 15
    });
    game.start();
}
function stopGame() {
    if (game) {
        let list = game.stop([10]);
        console.log(list);
    }
}
main();
//# sourceMappingURL=data:application/json;base64,